N, K = map(int, input().split())
factors = []
for i in range(1, N+1):
    if N % i == 0:
        factors.append(i)
if K > len(factors): print(0)
else: print(factors[K-1])

#Description
'''
어떤 자연수 p와 q가 있을 때, 만일 p를 q로 나누었을 때 나머지가 0이면 q는 p의 약수이다.
6을 예로 들면
6 ÷ 1 = 6 … 0
6 ÷ 2 = 3 … 0
6 ÷ 3 = 2 … 0
6 ÷ 4 = 1 … 2
6 ÷ 5 = 1 … 1
6 ÷ 6 = 1 … 0
그래서 6의 약수는 1, 2, 3, 6, 총 네 개이다.
두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.
'''
#Input
'''
첫째 줄에 N과 K가 빈칸을 사이에 두고 주어진다. N은 1 이상 10,000 이하이다. K는 1 이상 N 이하이다.
'''
#Output
'''
첫째 줄에 N의 약수들 중 K번째로 작은 수를 출력한다. 만일 N의 약수의 개수가 K개보다 적어서 K번째 약수가 존재하지 않을 경우에는 0을 출력하시오.
'''

#Solution
'''
N, K를 int형 자료로 입력받음
빈 list인 factors를 만듦
1부터 N까지의 정수 중 N을 그 수로 나눈 나머지가 0인 수를 factors에 추가함
factors는 N의 약수들이 오름차순으로 정렬되어있는 list가 됨
K가 약수의 개수보다 크면 0을 출력하고 아니면 K번째 수를 출력함
이때, 인덱스는 0부터 시작하므로 K-1 인덱스에 해당하는 수를 출력해야함
'''